version: '3.8'

services:
  # PostgreSQL Service
  postgres:
    image: postgres:15.7-alpine3.20
    container_name: postgres
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5433:5432"
    networks:
      - app-network
    volumes:
      - ./NEW/init.sql:/docker-entrypoint-initdb.d/init.sql  # Mount the init.sql script

  # RabbitMQ Service
  rabbitmq:
    image: rabbitmq:3.13.4-management-alpine
    container_name: rabbitmq
    ports:
      - "5673:5672"       # AMQP port
      - "15673:15672"     # Management port
    networks:
      - app-network

  # RabbitMQ Consumer Service
  rabbitmq-consumer:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.insertion  # Adjust the path if necessary
    container_name: rabbitmq-consumer
    depends_on:
      - rabbitmq
      - postgres
    environment:
      RABBITMQ_HOST: rabbitmq    # RabbitMQ service name in Docker network
      POSTGRES_HOST: postgres    # PostgreSQL service name in Docker network
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    networks:
      - app-network

  # Hospital Mapping Service
  hospital-mapping:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.fetching  # Adjust the path if necessary
    container_name: hospital-mapping
    depends_on:
      - postgres
      - rabbitmq
    environment:
      POSTGRES_HOST: postgres    # PostgreSQL service name in Docker network
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    networks:
      - app-network

  # Dashboard Service
  dashboard:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.dashboard  # Adjust the path if necessary
    container_name: dashboard
    ports:
      - "8080:8501"
    networks:
      - app-network
    depends_on:
      - postgres

networks:
  app-network:
    driver: bridge
